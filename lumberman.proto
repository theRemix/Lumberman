syntax = "proto3";

package pb;

option go_package = "pb";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

enum LogStatus {
  SUCCESS = 0;
  FAILURE = 1;
}

// The Logging service definition.
service Logger {
  // Write to Log
  rpc Log (LogRequest) returns (LogReply) {}

  // Get Log by key
  rpc GetLog (GetLogRequest) returns (GetLogReply) {}

  // Get all Logs by prefix
  rpc GetLogs (GetLogsRequest) returns (GetLogsReply) {}

  // Stream Logs by prefix
  rpc StreamLogs (GetLogsRequest) returns (stream GetLogReply) {}

  // List Log prefixes
  rpc ListPrefixes (google.protobuf.Empty) returns (ListPrefixesReply) {}

  // List Log keys by prefix
  rpc ListLogs (ListLogsRequest) returns (ListLogsReply) {}
}

// The request message containing the log data
message LogRequest {
  string prefix = 1;
  string data = 2;
}

// The response message containing status of saving log data
message LogReply {
  LogStatus status = 1;
}

// The request message containing the key
message GetLogRequest {
  string key = 1;
}

// The response message containing the log data and timestamp
message GetLogReply {
  string key = 1;
  google.protobuf.Timestamp timestamp = 2;
  string data = 3;
}

// The request message containing the log prefix
message GetLogsRequest {
  string prefix = 1;
}

// The response message containing the logs for prefix
message GetLogsReply {
  repeated GetLogReply logs = 1;
}

// The response message containing all prefixes
message ListPrefixesReply {
  repeated string prefixes = 1;
}

// The request message containing all keys by prefix
message ListLogsRequest {
  string prefix = 1;
}

// The response message containing the keys for prefix
message ListLogsReply {
  repeated string keys = 1;
}

